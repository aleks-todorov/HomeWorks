/*
Deployment script for FirstDatebaseProject

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "FirstDatebaseProject"
:setvar DefaultFilePrefix "FirstDatebaseProject"
:setvar DefaultDataPath "C:\Users\Aleks\AppData\Local\Microsoft\VisualStudio\SSDT\v11.0\FirstDatebaseProject\"
:setvar DefaultLogPath "C:\Users\Aleks\AppData\Local\Microsoft\VisualStudio\SSDT\v11.0\FirstDatebaseProject\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
        
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[Addresses]...';


GO
CREATE TABLE [dbo].[Addresses] (
    [AddressID]   INT            IDENTITY (1, 1) NOT NULL,
    [AddressText] NVARCHAR (100) NOT NULL,
    [TownID]      INT            NULL,
    CONSTRAINT [PK_Addresses] PRIMARY KEY CLUSTERED ([AddressID] ASC)
);


GO
PRINT N'Creating [dbo].[Departments]...';


GO
CREATE TABLE [dbo].[Departments] (
    [DepartmentID] INT           IDENTITY (1, 1) NOT NULL,
    [Name]         NVARCHAR (50) NOT NULL,
    [ManagerID]    INT           NOT NULL,
    CONSTRAINT [PK_Departments] PRIMARY KEY CLUSTERED ([DepartmentID] ASC)
);


GO
PRINT N'Creating [dbo].[Employees]...';


GO
CREATE TABLE [dbo].[Employees] (
    [EmployeeID]   INT           IDENTITY (1, 1) NOT NULL,
    [FirstName]    NVARCHAR (50) NOT NULL,
    [LastName]     NVARCHAR (50) NOT NULL,
    [MiddleName]   NVARCHAR (50) NULL,
    [JobTitle]     NVARCHAR (50) NOT NULL,
    [DepartmentID] INT           NOT NULL,
    [ManagerID]    INT           NULL,
    [HireDate]     SMALLDATETIME NOT NULL,
    [Salary]       MONEY         NOT NULL,
    [AddressID]    INT           NULL,
    CONSTRAINT [PK_Employees] PRIMARY KEY CLUSTERED ([EmployeeID] ASC)
);


GO
PRINT N'Creating [dbo].[EmployeesProjects]...';


GO
CREATE TABLE [dbo].[EmployeesProjects] (
    [EmployeeID] INT NOT NULL,
    [ProjectID]  INT NOT NULL
);


GO
PRINT N'Creating [dbo].[Projects]...';


GO
CREATE TABLE [dbo].[Projects] (
    [ProjectID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (50) NOT NULL,
    [Description] NTEXT         NULL,
    [StartDate]   SMALLDATETIME NOT NULL,
    [EndDate]     SMALLDATETIME NULL,
    CONSTRAINT [PK_Projects] PRIMARY KEY CLUSTERED ([ProjectID] ASC)
);


GO
PRINT N'Creating [dbo].[Towns]...';


GO
CREATE TABLE [dbo].[Towns] (
    [TownID] INT           IDENTITY (1, 1) NOT NULL,
    [Name]   NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Towns] PRIMARY KEY CLUSTERED ([TownID] ASC)
);


GO
PRINT N'Creating FK_Addresses_Towns...';


GO
ALTER TABLE [dbo].[Addresses] WITH NOCHECK
    ADD CONSTRAINT [FK_Addresses_Towns] FOREIGN KEY ([TownID]) REFERENCES [dbo].[Towns] ([TownID]);


GO
PRINT N'Creating FK_Departments_Employees...';


GO
ALTER TABLE [dbo].[Departments] WITH NOCHECK
    ADD CONSTRAINT [FK_Departments_Employees] FOREIGN KEY ([ManagerID]) REFERENCES [dbo].[Employees] ([EmployeeID]);


GO
PRINT N'Creating FK_Employees_Addresses...';


GO
ALTER TABLE [dbo].[Employees] WITH NOCHECK
    ADD CONSTRAINT [FK_Employees_Addresses] FOREIGN KEY ([AddressID]) REFERENCES [dbo].[Addresses] ([AddressID]);


GO
PRINT N'Creating FK_Employees_Departments...';


GO
ALTER TABLE [dbo].[Employees] WITH NOCHECK
    ADD CONSTRAINT [FK_Employees_Departments] FOREIGN KEY ([DepartmentID]) REFERENCES [dbo].[Departments] ([DepartmentID]) ON DELETE CASCADE;


GO
PRINT N'Creating FK_Employees_Employees...';


GO
ALTER TABLE [dbo].[Employees] WITH NOCHECK
    ADD CONSTRAINT [FK_Employees_Employees] FOREIGN KEY ([ManagerID]) REFERENCES [dbo].[Employees] ([EmployeeID]);


GO
PRINT N'Creating [dbo].[StrConcat]...';


GO
CREATE FUNCTION StrConcat ()
RETURNS varchar
AS
BEGIN
DECLARE @result varchar(MAX)
SELECT @result= e.FirstName + ' ' + e.LastName
    FROM Employees e 
RETURN (@result)
END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Addresses] WITH CHECK CHECK CONSTRAINT [FK_Addresses_Towns];

ALTER TABLE [dbo].[Departments] WITH CHECK CHECK CONSTRAINT [FK_Departments_Employees];

ALTER TABLE [dbo].[Employees] WITH CHECK CHECK CONSTRAINT [FK_Employees_Addresses];

ALTER TABLE [dbo].[Employees] WITH CHECK CHECK CONSTRAINT [FK_Employees_Departments];

ALTER TABLE [dbo].[Employees] WITH CHECK CHECK CONSTRAINT [FK_Employees_Employees];


GO
PRINT N'Update complete.'
GO
